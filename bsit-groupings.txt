'ACTIVITY 2
'Emerging Technologies

'EMBEDDED SYSTEM

'Raymundo, Edan Fher
'Alvarado, Nolly
'De Castro, Jestro Maverick 
'Labrado, Ronald Jr
'Padilla, Angelo

-------------------------------------------------------------------------

Objective of the topic:

The goals of this embedded systems report are to provide a thorough overview of embedded systems, investigate their components and architecture, describe the design and development process, evaluate their applications and case studies, and identify obstacles and future trends.
It also covers embedded system applications in automotive, consumer electronics, healthcare devices, industrial automation, and smart home technology.  

Furthermore, the topic discusses the process of creating embedded systems, including requirements analysis, system architecture, hardware selection, and software development utilizing embedded-specific programming languages and tools.

-------------------------------------------------------------------------

Scope of the topic:
This aims to promote an overview on the topic of embedded systems.
The overall goal of this is to give knowledge and enhance the learners perspective towards embedded systems.

-------------------------------------------------------------------------

Introduction:  - PADILLA
Nowadays, Embedded systems are everywhere! Gotta curious why?
An Embedded System is a combination of computer hardware and software components tightly integrated to control and monitor the operations of the device it is embedded in. The term "embedded" signifies that these systems are always functioning as an integral part of a complete device. Embedded systems may also function within a larger system. The systems can be programmable or have a fixed functionality. Embedded systems play a critical role in a wide range of products, machines, and intelligent operations, including applications involving machine learning and artificial intelligence. 
The hardware component of an embedded system consists of essential components such as microprocessors or microcontrollers, memory, input/output interfaces, sensors, actuators, and other peripheral devices tailored to the specific application's requirements. On the other hand, the software component comprises the embedded operating system, device drivers, application-specific software, and firmware. These software components work together to enable the embedded system to carry out its designated functions. The software is typically highly specialized, designed to cater specifically to the unique purpose served by the embedded system.
 Embedded systems use the communication ports to transmit data between the processor and peripheral devices often, other Embedded systems use a communication protocol. Embedded systems can be found in a wide range of devices, including industrial machines, consumer electronics, agricultural and processing industry devices, automobiles, medical equipment, cameras, digital watches, household appliances, airplanes, vending machines, toys, and even mobile devices. These embedded systems play a crucial role in managing and controlling specific functions or tasks within these devices, enabling functionality, and providing automation.
Prominent technology companies, such as Apple, IBM, Intel, and Texas Instruments, are among the chip manufacturers for embedded systems. These companies contribute to the growth of embedded systems, which is fueled in part by ongoing investments in areas like artificial intelligence (AI), mobile computing, and the demand for chips capable of handling high-level processing.
For texas instruments there are msp430, microchip PIC, and ATmel ATmega family but mostly people working in Embedded System recommend msp430 because it has a great selection of microcontrollers, and according to them  it has a great community online, and also texas instruments offers a lot of documentation and great examples for each and every peripheral that the microcontroller has and this includes code examples and documentation.


HISTORY
Embedded systems have a rich history that spans several decades. Embedded systems have a history dating back to the 1960s. One notable development during that time was Charles Stark Draper's creation of an integrated circuit in 1961. This circuit was designed to reduce the size and weight of the Apollo Guidance Computer, which was responsible for digital operations on the Apollo Command Module and Lunar Module. The integration of this circuit into the computer helped astronauts gather real-time flight data.
In 1965, Autonetics (now part of Boeing) developed the D-17B computer for the Minuteman I missile guidance system. This computer is widely recognized as the first mass-produced embedded system. When the Minuteman II entered production in 1966, the D-17B was replaced with the NS-17 missile guidance system, which extensively utilized integrated circuits. Another notable milestone occurred in 1968 when the Volkswagen 1600 became the first vehicle to incorporate an embedded system, using a microprocessor to control its electronic fuel injection system.
During the late 1960s and early 1970s, the cost of integrated circuits decreased, leading to a significant increase in their usage. Texas Instruments developed the first microcontroller in 1971, which was the TMS1000 series. These microcontrollers, commercially available in 1974, included a 4-bit processor, read-only memory (ROM), and random-access memory (RAM), costing approximately $2 each when ordered in bulk.
In 1971, Intel introduced the 4004, widely regarded as the first commercially available processor. This 4-bit microprocessor was primarily designed for calculators and small electronic devices, although it required additional memory and support chips. Intel followed up in 1972 with the 8-bit Intel 8008, which featured 16 KB of memory, and in 1974 with the Intel 8080, which had 64 KB of memory. The Intel 8080's successor, the x86 series, was released in 1978 and remains widely used today.
The year 1987 saw the release of the first embedded operating system called VxWorks, developed by Wind River. This real-time operating system was followed by Microsoft's Windows Embedded CE in 1996. Embedded Linux products began appearing in the late 1990s, marking the start of Linux's presence in a wide range of embedded devices. Nowadays, Linux is utilized in nearly all embedded systems.

-------------------------------------------------------------------------

Fundamentals: - LABRADO

Embedded systems are computer systems designed to perform specific tasks within larger systems. They are specialized for a certain purpose and are frequently integrated with other systems or devices. These systems are unique architecture and set parts allow them to do the task for which they were designed. 

 Component of Embedded system:

Microcontroller or Microprocessor - The central processing unit of an embedded system is usually a microcontroller or microprocessor.  These component execute the program instructions and perform the necessary computation  

Memory - Embedded systems have different types of memory to store program instruction, data and variables. This includes read-only memory (ROM) for storing the firmware or program code permanently, random-access memory (RAM) for temporary data storage, and non-volatile memory like flash memory  for data retention.

Embedded system architecture: 

Firmware layer - is in charge of managing the hardware peripherals which may include communication interfaces, timers, interrupts, analog and digital converters, and input/output interfaces. It works directly with the hardware parts, employing its capabilities to do particular tasks.

Application layer - interact with firmware layer and makes use of its low-level functionality and hardware control to carry out the activities that the system is designed to do. It provides a high-level software interface for developers to implement the particular features and behaviors of the embedded system while abstracting the complexity of the lower layers.
Roles in Embedded system:


Firmware/Software engineer - is responsible for developing and implementing the software components that control and manage the functionality of the embedded system. They work closely with hardware engineers, firmware developers, and other team members to create software solutions that interact with the underlying hardware.

Hardware engineer - responsible for designing, creating and testing the system and hardware that go into an embedded system. They collaborate closely with firmware developers, software engineers, and other team members to produce effective embedded systems. 

-------------------------------------------------------------------------



