Design and Development
Embedded systems have become an integral part of our daily lives, powering devices ranging from smartphones to smart home appliances. The objective of this report is to provide a comprehensive understanding of the design process, the step of the development, and OS comparison that will be used in the embedded system.
------------------------------------------------------------------------------------------------------------------------------------------
Here are the 4 types of Embedded System
Stand-Alone Embedded System
Real-Time Embedded System
Networked Appliances
Mobile devices
--------------------------------------------------------------------------------------------------------------------------------
Steps in the Embedded System Design Process
Abstraction - In this stage the problem related to the system is abstracted.
Hardware â€“ Software Architecture -Proper knowledge of hardware and software to be known before starting any design process.
Extra Functional Properties - Extra functions to be implemented are to be understood completely from the main design.
System Related Family of Design - When designing a system, one should refer to a previous system-related family of design.
Modular Design - Separate module designs must be made so that they can be used later on when required.
Mapping - Based on software mapping is done. For example, data flow and program flow are mapped into one.
User Interface Design - In user interface design it depends on user requirements, environment analysis and function of the system. For example, on a mobile phone if we want to reduce the power consumption of mobile phones we take care of other parameters, so that power consumption can be reduced.
Refinement - Every component and module must be refined appropriately so that the software team can understand. Architectural description language is used to describe the software design.
------------------------------------------------------------------------------------------------------------------------------------------
Ethical Considerations in Designing and Developing Embedded Systems
Privacy and Data Protection: Embedded systems often handle sensitive data, necessitating robust security measures and transparent data collection practices to protect individuals' privacy rights.
Bias and Fairness: Designing devices free from biases ensures fairness and equal treatment for all individuals, promoting inclusivity and preventing discrimination.
Accountability and Responsibility: Implementing mechanisms for error reporting and clear delineation of responsibilities enhances accountability and minimizes potential harm caused by embedded systems.
Social Impact: Considering the broader social implications of embedded systems, such as their effects on employment, inequality, and public safety, is crucial to ensure responsible design and address potential challenges.

------------------------------------------------------------------------------------------------------------------------------------------

Operating System          Key Features                                                     Advantages                                                             Disadvantages
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Linux             Open-source, flexibility, stability           Large developer community, extensive support     Customization and configuration complexity
Android       Feature-rich, extensive app ecosystem  Broad device compatibility, user-friendly        Higher resource requirements, limited real-time
FreeRTOS    Small memory footprint, real-time         Widely used, determinism, lightweight             Limited tooling and debugging capabilities
QNX             Reliability, high performance                    Robust message-passing, safety-critical           Limited hardware and software support

.
